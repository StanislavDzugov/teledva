# Generated by Django 4.1.1 on 2023-02-27 14:03

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0002_alter_company_options_alter_customuser_options'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата последнего обновления')),
                ('file', models.FileField(upload_to='attachments/', verbose_name='Выгрузка')),
                ('type', models.IntegerField(choices=[(1, 'Дневной'), (2, 'Итоговый')], verbose_name='Тип файла')),
            ],
            options={
                'verbose_name': 'Приложение',
                'verbose_name_plural': 'Приложения',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата последнего обновления')),
                ('transportation_type', models.CharField(max_length=255, verbose_name='Вид транспортной услуги')),
                ('transportation_company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='users.company', verbose_name='Компания перевозчик')),
            ],
            options={
                'verbose_name': 'Заказ',
                'verbose_name_plural': 'Заказы',
                'unique_together': {('id', 'transportation_company')},
            },
        ),
        migrations.CreateModel(
            name='Bid',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата последнего обновления')),
                ('status', models.IntegerField(choices=[(1, 'Принята'), (2, 'В пути'), (3, 'Доставлена'), (4, 'Отменена')], default=1, verbose_name='Статус')),
                ('requirement_number', models.CharField(blank=True, max_length=255, null=True, verbose_name='Номер требования')),
                ('bid_number', models.CharField(max_length=255, unique=True, verbose_name='Номер поручения')),
                ('bid_date', models.DateField(verbose_name='Дата поручения')),
                ('transportation_type', models.CharField(max_length=255, verbose_name='Вид транспортной услуги')),
                ('vehicle_payload', models.FloatField(blank=True, null=True, verbose_name='Тоннаж ТС')),
                ('vehicles_number', models.IntegerField(blank=True, null=True, verbose_name='Количество транспортных средств')),
                ('planned_departure_date', models.DateField(verbose_name='Запланированная дата отправления')),
                ('planned_arrival_date', models.DateField(verbose_name='Запланированная дата получения')),
                ('annotation', models.TextField(blank=True, null=True, verbose_name='Примечание')),
                ('sender_company', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Компания отправитель')),
                ('loading_full_address', models.TextField(blank=True, null=True, verbose_name='Адрес погрузки')),
                ('loading_city', models.CharField(blank=True, max_length=255, null=True, verbose_name='Город погрузки')),
                ('sender_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='ФИО отправителя')),
                ('sender_phone', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Телефон отправителя')),
                ('sender_email', models.CharField(blank=True, max_length=255, null=True, verbose_name='Email отправителя')),
                ('recipient_company', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Компания получатель')),
                ('dispatch_full_address', models.TextField(blank=True, null=True, verbose_name='Адрес выгрузки')),
                ('dispatch_city', models.CharField(max_length=255, verbose_name='Город выгрузки')),
                ('recipient_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='ФИО получателя')),
                ('recipient_phone', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Телефон получателя')),
                ('recipient_email', models.CharField(blank=True, max_length=255, null=True, verbose_name='Email получателя')),
                ('slots_number', models.IntegerField(blank=True, null=True, verbose_name='Количество мест')),
                ('total_weight', models.FloatField(blank=True, null=True, verbose_name='Общий вес груза')),
                ('total_volume', models.FloatField(blank=True, null=True, verbose_name='Общий объем груза')),
                ('load_dimensions', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Габариты груза')),
                ('load_weight', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Вес')),
                ('load_value', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Стоимость груза')),
                ('shipment_price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Стоимость перевозки с НДС')),
                ('fact_departure_date', models.DateField(blank=True, null=True, verbose_name='Фактическа дата отправления')),
                ('fact_arrival_date', models.DateField(blank=True, null=True, verbose_name='Фактическая дата получения')),
                ('attachments', models.ManyToManyField(blank=True, related_name='bids', to='bids.attachment')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bids', to='bids.order', verbose_name='Заказ')),
                ('transportation_company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bids', to='users.company', verbose_name='Компания перевозчик')),
            ],
            options={
                'verbose_name': 'Заявка',
                'verbose_name_plural': 'Заявки',
            },
        ),
        migrations.CreateModel(
            name='Auction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата последнего обновления')),
                ('auction_finish_date', models.DateTimeField(blank=True, null=True, verbose_name='Дата завершения аукциона')),
                ('status', models.IntegerField(choices=[(1, 'Активный'), (2, 'Завершен'), (3, 'Отменен')], default=1, verbose_name='Статус')),
                ('auction_default_company', models.ForeignKey(blank=True, help_text='Если никто не участвует,            автоматически ставим данную компанию победителем', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='orders_default', to='users.company', verbose_name='Компания для аукциона')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bids.order', verbose_name='Разыгрываемый ордер')),
            ],
            options={
                'verbose_name': 'Аукцион',
                'verbose_name_plural': 'Аукционы',
            },
        ),
        migrations.CreateModel(
            name='AuctionOffer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата последнего обновления')),
                ('price', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Предложенная стоимость')),
                ('auction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='auction_offers', to='bids.auction', verbose_name='Заказ-аукцион')),
                ('transportation_company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='auction_offers', to='users.company', verbose_name='Компания перевозчик')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Предложивший пользователь')),
            ],
            options={
                'verbose_name': 'Предложение по аукциону',
                'verbose_name_plural': 'Предложения по аукционам',
                'unique_together': {('id', 'auction', 'transportation_company')},
            },
        ),
    ]
